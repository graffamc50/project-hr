{"ast":null,"code":"// ##############################\n// // // Chart variables\n// #############################\n\n// chartExample1 and chartExample2 options\nlet chart1_2_options = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  tooltips: {\n    backgroundColor: \"#f5f5f5\",\n    titleFontColor: \"#333\",\n    bodyFontColor: \"#666\",\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\"\n  },\n  responsive: true,\n  scales: {\n    yAxes: {\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: \"rgba(29,140,248,0.0)\",\n        zeroLineColor: \"transparent\"\n      },\n      ticks: {\n        suggestedMin: 60,\n        suggestedMax: 125,\n        padding: 20,\n        fontColor: \"#9a9a9a\"\n      }\n    },\n    xAxes: {\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: \"rgba(29,140,248,0.1)\",\n        zeroLineColor: \"transparent\"\n      },\n      ticks: {\n        padding: 20,\n        fontColor: \"#9a9a9a\"\n      }\n    }\n  }\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample1 = {\n  data1: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [{\n        label: \"My First dataset\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#1f8ef1\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#1f8ef1\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#1f8ef1\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 4,\n        data: [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100]\n      }]\n    };\n  },\n  data2: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [{\n        label: \"My First dataset\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#1f8ef1\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#1f8ef1\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#1f8ef1\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 4,\n        data: [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120]\n      }]\n    };\n  },\n  data3: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [{\n        label: \"My First dataset\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#1f8ef1\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#1f8ef1\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#1f8ef1\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 4,\n        data: [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130]\n      }]\n    };\n  },\n  options: chart1_2_options\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample2 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [{\n        label: \"Data\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#1f8ef1\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#1f8ef1\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#1f8ef1\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 4,\n        data: [80, 100, 70, 80, 120, 80]\n      }]\n    };\n  },\n  options: chart1_2_options\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample3 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\n\n    return {\n      labels: [\"USA\", \"GER\", \"AUS\", \"UK\", \"RO\", \"BR\"],\n      datasets: [{\n        label: \"Countries\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        hoverBackgroundColor: gradientStroke,\n        borderColor: \"#d048b6\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        data: [53, 20, 10, 80, 100, 45]\n      }]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    responsive: true,\n    scales: {\n      yAxes: {\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(225,78,202,0.1)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          suggestedMin: 60,\n          suggestedMax: 120,\n          padding: 20,\n          fontColor: \"#9e9e9e\"\n        }\n      },\n      xAxes: {\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(225,78,202,0.1)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          padding: 20,\n          fontColor: \"#9e9e9e\"\n        }\n      }\n    }\n  }\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nconst chartExample4 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\"],\n      datasets: [{\n        label: \"My First dataset\",\n        fill: true,\n        backgroundColor: gradientStroke,\n        borderColor: \"#00d6b4\",\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        pointBackgroundColor: \"#00d6b4\",\n        pointBorderColor: \"rgba(255,255,255,0)\",\n        pointHoverBackgroundColor: \"#00d6b4\",\n        pointBorderWidth: 20,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 15,\n        pointRadius: 4,\n        data: [90, 27, 60, 12, 80]\n      }]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    responsive: true,\n    scales: {\n      yAxes: {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.0)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          suggestedMin: 50,\n          suggestedMax: 125,\n          padding: 20,\n          fontColor: \"#9e9e9e\"\n        }\n      },\n      xAxes: {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(0,242,195,0.1)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          padding: 20,\n          fontColor: \"#9e9e9e\"\n        }\n      }\n    }\n  }\n};\nmodule.exports = {\n  chartExample1,\n  // in src/views/Dashboard.js\n  chartExample2,\n  // in src/views/Dashboard.js\n  chartExample3,\n  // in src/views/Dashboard.js\n  chartExample4 // in src/views/Dashboard.js\n};","map":{"version":3,"names":["chart1_2_options","maintainAspectRatio","legend","display","tooltips","backgroundColor","titleFontColor","bodyFontColor","bodySpacing","xPadding","mode","intersect","position","responsive","scales","yAxes","barPercentage","gridLines","drawBorder","color","zeroLineColor","ticks","suggestedMin","suggestedMax","padding","fontColor","xAxes","chartExample1","data1","canvas","ctx","getContext","gradientStroke","createLinearGradient","addColorStop","labels","datasets","label","fill","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","data","data2","data3","options","chartExample2","chartExample3","hoverBackgroundColor","chartExample4","module","exports"],"sources":["C:/Users/colton.graffam.DESKTOP-9VUJD30/Documents/CODING/BRANCHES/project-hr/src/dashboard/variables/charts.js"],"sourcesContent":["\n\n\n\n// ##############################\n// // // Chart variables\n// #############################\n\n// chartExample1 and chartExample2 options\nlet chart1_2_options = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  tooltips: {\n    backgroundColor: \"#f5f5f5\",\n    titleFontColor: \"#333\",\n    bodyFontColor: \"#666\",\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\",\n  },\n  responsive: true,\n  scales: {\n    yAxes: {\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: \"rgba(29,140,248,0.0)\",\n        zeroLineColor: \"transparent\",\n      },\n      ticks: {\n        suggestedMin: 60,\n        suggestedMax: 125,\n        padding: 20,\n        fontColor: \"#9a9a9a\",\n      },\n    },\n    xAxes: {\n      barPercentage: 1.6,\n      gridLines: {\n        drawBorder: false,\n        color: \"rgba(29,140,248,0.1)\",\n        zeroLineColor: \"transparent\",\n      },\n      ticks: {\n        padding: 20,\n        fontColor: \"#9a9a9a\",\n      },\n    },\n  },\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample1 = {\n  data1: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\",\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100],\n        },\n      ],\n    };\n  },\n  data2: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\",\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\n        },\n      ],\n    };\n  },\n  data3: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\",\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130],\n        },\n      ],\n    };\n  },\n  options: chart1_2_options,\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample2 = {\n  data: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [\n        {\n          label: \"Data\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [80, 100, 70, 80, 120, 80],\n        },\n      ],\n    };\n  },\n  options: chart1_2_options,\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nlet chartExample3 = {\n  data: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\n\n    return {\n      labels: [\"USA\", \"GER\", \"AUS\", \"UK\", \"RO\", \"BR\"],\n      datasets: [\n        {\n          label: \"Countries\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          hoverBackgroundColor: gradientStroke,\n          borderColor: \"#d048b6\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          data: [53, 20, 10, 80, 100, 45],\n        },\n      ],\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\",\n    },\n    responsive: true,\n    scales: {\n      yAxes: {\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(225,78,202,0.1)\",\n          zeroLineColor: \"transparent\",\n        },\n        ticks: {\n          suggestedMin: 60,\n          suggestedMax: 120,\n          padding: 20,\n          fontColor: \"#9e9e9e\",\n        },\n      },\n      xAxes: {\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(225,78,202,0.1)\",\n          zeroLineColor: \"transparent\",\n        },\n        ticks: {\n          padding: 20,\n          fontColor: \"#9e9e9e\",\n        },\n      },\n    },\n  },\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.js\n// #########################################\nconst chartExample4 = {\n  data: (canvas) => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\"],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#00d6b4\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#00d6b4\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#00d6b4\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [90, 27, 60, 12, 80],\n        },\n      ],\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\",\n    },\n    responsive: true,\n    scales: {\n      yAxes: {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.0)\",\n          zeroLineColor: \"transparent\",\n        },\n        ticks: {\n          suggestedMin: 50,\n          suggestedMax: 125,\n          padding: 20,\n          fontColor: \"#9e9e9e\",\n        },\n      },\n      xAxes: {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(0,242,195,0.1)\",\n          zeroLineColor: \"transparent\",\n        },\n        ticks: {\n          padding: 20,\n          fontColor: \"#9e9e9e\",\n        },\n      },\n    },\n  },\n};\n\nmodule.exports = {\n  chartExample1, // in src/views/Dashboard.js\n  chartExample2, // in src/views/Dashboard.js\n  chartExample3, // in src/views/Dashboard.js\n  chartExample4, // in src/views/Dashboard.js\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}